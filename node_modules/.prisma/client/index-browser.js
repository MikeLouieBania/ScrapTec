
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.13.0
 * Query Engine version: 4bc8b6e1b66cb932731fb1bdbbc550d1e010de81
 */
Prisma.prismaVersion = {
  client: "5.13.0",
  engine: "4bc8b6e1b66cb932731fb1bdbbc550d1e010de81"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  firstName: 'firstName',
  lastName: 'lastName',
  password: 'password',
  cityId: 'cityId',
  gender: 'gender',
  contactNumber: 'contactNumber',
  profilePicture: 'profilePicture',
  createdAt: 'createdAt',
  reportedListingCount: 'reportedListingCount'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  organizationname: 'organizationname',
  email: 'email',
  password: 'password',
  address: 'address',
  contactNumber: 'contactNumber',
  secRegistrationNumber: 'secRegistrationNumber',
  verificationStatus: 'verificationStatus',
  lifetimePoints: 'lifetimePoints',
  totalPoints: 'totalPoints',
  type: 'type',
  profilePicture: 'profilePicture',
  createdAt: 'createdAt'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  filename: 'filename',
  url: 'url',
  uploadedBy: 'uploadedBy',
  organizationId: 'organizationId',
  createdAt: 'createdAt'
};

exports.Prisma.DropPointScalarFieldEnum = {
  id: 'id',
  name: 'name',
  location: 'location',
  openingTime: 'openingTime',
  closingTime: 'closingTime',
  description: 'description',
  managerId: 'managerId',
  password: 'password'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password'
};

exports.Prisma.ManagerScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phoneNumber: 'phoneNumber',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DonationScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  dropPointId: 'dropPointId',
  createdAt: 'createdAt',
  expectedDateOfArrival: 'expectedDateOfArrival',
  confirmedByName: 'confirmedByName',
  confirmedByEmail: 'confirmedByEmail',
  status: 'status',
  isSubmitted: 'isSubmitted',
  points: 'points'
};

exports.Prisma.FeedbackScalarFieldEnum = {
  id: 'id',
  content: 'content',
  rating: 'rating',
  createdAt: 'createdAt',
  organizationId: 'organizationId',
  dropPointId: 'dropPointId',
  donationId: 'donationId'
};

exports.Prisma.PeripheralScalarFieldEnum = {
  id: 'id',
  type: 'type',
  brand: 'brand',
  model: 'model',
  condition: 'condition',
  quantity: 'quantity',
  donationId: 'donationId'
};

exports.Prisma.CityScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.AdvertisementScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  cityId: 'cityId',
  title: 'title',
  pointsSpent: 'pointsSpent',
  link: 'link',
  imageUrl: 'imageUrl',
  isActive: 'isActive',
  startDate: 'startDate',
  expiryDate: 'expiryDate'
};

exports.Prisma.AdInteractionScalarFieldEnum = {
  id: 'id',
  advertisementId: 'advertisementId',
  clickedAt: 'clickedAt'
};

exports.Prisma.KeyValueStoreScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value'
};

exports.Prisma.ListingScalarFieldEnum = {
  id: 'id',
  title: 'title',
  price: 'price',
  categoryId: 'categoryId',
  conditionId: 'conditionId',
  description: 'description',
  location: 'location',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  status: 'status'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  listingId: 'listingId',
  reportedById: 'reportedById',
  reason: 'reason',
  createdAt: 'createdAt'
};

exports.Prisma.SavedListingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  listingId: 'listingId',
  createdAt: 'createdAt'
};

exports.Prisma.SaleScalarFieldEnum = {
  id: 'id',
  buyerId: 'buyerId',
  listingId: 'listingId',
  conversationId: 'conversationId',
  salePrice: 'salePrice',
  saleDate: 'saleDate'
};

exports.Prisma.RatingScalarFieldEnum = {
  id: 'id',
  value: 'value',
  comment: 'comment',
  saleId: 'saleId',
  raterId: 'raterId',
  rateeId: 'rateeId',
  createdAt: 'createdAt',
  type: 'type'
};

exports.Prisma.PhotoScalarFieldEnum = {
  id: 'id',
  imageUrl: 'imageUrl',
  listingId: 'listingId'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  basePoints: 'basePoints'
};

exports.Prisma.ConditionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  conditionPoints: 'conditionPoints'
};

exports.Prisma.PointQuantityScalarFieldEnum = {
  id: 'id',
  minQuantity: 'minQuantity',
  maxQuantity: 'maxQuantity',
  quantityBonus: 'quantityBonus'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  user1Id: 'user1Id',
  user2Id: 'user2Id',
  listingId: 'listingId',
  createdAt: 'createdAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  content: 'content',
  senderId: 'senderId',
  conversationId: 'conversationId',
  imageFileId: 'imageFileId',
  read: 'read',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  User: 'User',
  Organization: 'Organization',
  Document: 'Document',
  DropPoint: 'DropPoint',
  Admin: 'Admin',
  Manager: 'Manager',
  Donation: 'Donation',
  Feedback: 'Feedback',
  Peripheral: 'Peripheral',
  City: 'City',
  Advertisement: 'Advertisement',
  AdInteraction: 'AdInteraction',
  KeyValueStore: 'KeyValueStore',
  Listing: 'Listing',
  Report: 'Report',
  SavedListing: 'SavedListing',
  Sale: 'Sale',
  Rating: 'Rating',
  Photo: 'Photo',
  Category: 'Category',
  Condition: 'Condition',
  PointQuantity: 'PointQuantity',
  Conversation: 'Conversation',
  Message: 'Message'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
