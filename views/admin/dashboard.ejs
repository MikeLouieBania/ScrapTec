<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <!-- Link to Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <!-- Link to Google's Material Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <style>
        /* Additional custom styles for the page */
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #c1e4fc;
        }
    
        .container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
        }

        /* Sidebar styles */
        .sidebar {
            height: 100%;
            width: 60px; /* Initial width just for the icons */
            position: fixed;
            top: 0;
            left: 0;
            background-color: #6499E9; /* Main blue */
            padding-top: 20px;
            transition: 0.5s;
            z-index: 2; /* Ensure the sidebar is above the main content */
        }

        .sidebar:hover {
            width: 200px; /* Width when hovered */
        }

        .sidebar a {
            margin-top: 25px;
            display: flex;
            align-items: center;
            padding: 10px 20px;
            color: #fff;
            text-decoration: none;
            transition: background-color 0.3s;
            font-weight: bold;

        }

        .sidebar a .material-icons {
            margin-right: 10px; /* Space between icon and text */
        }

        /* Hide text labels by default */
        .sidebar a::after {
            content: attr(data-label);
            display: none;
        }

        /* Show text labels on hover */
        .sidebar:hover a::after {
            display: inline;
        }

        .sidebar a:hover {
            background-color: #4477CE; /* Darker blue on hover */
        }

        /* Main content styles */
        .main-content {
            padding-left: 70px; /* Adjusted to avoid overlap with sidebar */
            padding-top: 20px;
            padding-right: 20px;
            padding-bottom: 20px;
            transition: 0.5s; /* Smooth transition */
        }

        h1 {
            font-size: 24px;
            margin-bottom: 20px;
            color: #007BFF; /* Main blue */
        }
    </style>
</head>

<body>

    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <a href="/admin/dashboard" data-label="Dashboard"><span class="material-icons">dashboard</span></a>
        <a href="/admin/organizationmanagement" data-label="Organization Management"><span class="material-icons">business_center</span></a>
        <a href="/admin/droppointmanagement" data-label="Drop Point Management"><span class="material-icons">place</span></a>
        <a href="/admin/managermanagement" data-label="Manager Management"><span class="material-icons">supervisor_account</span></a>
        <a href="/admin/usermanagement" data-label="User Management"><span class="material-icons">group</span></a>
        <a><form action="/admin/logout" method="post">
            <button type="submit" data-label="Logout">
              <span class="material-icons">logout</span>
            </button>
          </form></a>
    </div>

    
     <!-- Main content -->
     <div class="main-content">
        <div class="container">
            <h1>Admin Dashboard</h1>
            <!-- User Demographics and Activity Section -->
            <section id="user-demographics">
                <h2>User Demographics and Activity</h2>
                <div id="gender-distribution-chart" style="height: 400px;"></div>
                <div id="user-signups-chart" style="height: 400px;"></div>
                <div id="users-by-city-chart" style="height: 400px;"></div>
            </section>

            <!-- Organization Insights Section -->
            <section id="organization-insights">
                <h2>Organization Insights</h2>
                <div id="organizations-by-verification-chart" style="width:100%; height:400px;"></div>
                <div id="organization-points-over-time-chart" style="width:100%; height:400px;"></div>
            </section>

            <!-- Donation Analysis Section -->
            <section id="donation-analysis">
                <h2>Donation Analysis</h2>
                <div id="donations-over-time-chart" style="width:100%; height:400px;"></div>
                <div id="donation-status-distribution-chart" style="width:100%; height:400px;"></div>
            </section>

            <!-- Feedback and Ratings Section -->
            <section id="feedback-ratings">
                <h2>Feedback and Ratings</h2>  
                <div id="average-rating-bubble-chart" style="width:100%; height:400px;"></div>
                <div id="ratings-distribution-chart" style="width:100%; height:400px;"></div>
            </section>

            <!-- Advertisement Performance Section -->
            <section id="advertisement-performance">
                <h2>Advertisement Performance</h2>
                <div id="ad-interactions-line-chart" style="width:100%; height:400px;"></div>
                <div id="points-spent-bar-chart" style="width:100%; height:400px;"></div>
            </section>

            <!-- Sales and Listings Section -->
            <section id="sales-listings">
                <h2>Sales and Listings</h2>
                <!-- Chart placeholders go here -->
            </section>

            <!-- Message and Conversation Insights Section -->
            <section id="message-conversation-insights">
                <h2>Message and Conversation Insights</h2>
                <!-- Chart placeholders go here -->
            </section>

            <!-- General Analytics Section -->
            <section id="general-analytics">
                <h2>General Analytics</h2>
                <!-- Chart placeholders go here -->
            </section>
        </div>
    </div>


    <!-- Load Bootstrap JS (you can also include jQuery for additional functionality) --> 
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <!-- Highcharts Library -->
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/highcharts-more.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script> 

    <!-- Highmaps Library -->
    <script src="https://code.highcharts.com/maps/highmaps.js"></script>
    <script src="https://code.highcharts.com/mapdata/custom/world.js"></script>

    <script>
        $(document).ready(function() {
            // Fetch and render gender distribution chart
            $.get('/admin/gender-distribution', function(data) {
                Highcharts.chart('gender-distribution-chart', {
                    chart: {
                        type: 'pie'
                    },
                    title: {
                        text: 'Gender Distribution'
                    },
                    series: [{
                        name: 'Users',
                        colorByPoint: true,
                        data: data.map(item => {
                            return {
                                name: item.gender,
                                y: item._count.gender
                            };
                        })
                    }]
                });
            });

            // Fetch and render user signups chart
            $.get('/admin/user-signups', function(data) {
                Highcharts.chart('user-signups-chart', {
                    chart: {
                        type: 'line'
                    },
                    title: {
                        text: 'User Sign-ups Over Time'
                    },
                    xAxis: {
                        type: 'datetime',
                        title: {
                            text: 'Date'
                        }
                    },
                    yAxis: {
                        title: {
                            text: 'Number of Sign-ups'
                        },
                        allowDecimals: false, 
                        min: 0, 
                        tickInterval: 1 
                    },
                    series: [{
                        name: 'Sign-ups',
                        data: data.map(item => {
                            return [new Date(item.date).getTime(), item.count];
                        })
                    }]
                });
            });

            // Fetch and render users by city chart 
            $.get('/admin/users-by-city', function(data) {
                Highcharts.chart('users-by-city-chart', {
                    chart: {
                        type: 'bar' // Bar chart
                    },
                    title: {
                        text: 'Users by City in the Philippines'
                    },
                    xAxis: {
                        categories: data.map(item => item.name), // Use city name for the X-axis
                        title: {
                            text: 'Cities'
                        }
                    },
                    yAxis: {
                        min: 0,
                        allowDecimals: false, // Ensure Y-axis has only whole numbers
                        title: {
                            text: 'Number of Users',
                            align: 'high'
                        },
                        labels: {
                            overflow: 'justify'
                        }
                    },
                    plotOptions: {
                        bar: {
                            dataLabels: {
                                enabled: true
                            }
                        }
                    },
                    credits: {
                        enabled: false
                    },
                    series: [{
                        name: 'Users',
                        data: data.map(item => item._count.users) // User count for each city
                    }]
                });
            });
       
            // Fetch and render organizations by verification status chart
            $.get('/admin/organizations-by-verification', function(data) {
                Highcharts.chart('organizations-by-verification-chart', {
                    chart: {
                        type: 'column'
                    },
                    title: {
                        text: 'Organizations by Verification Status'
                    },
                    xAxis: {
                        categories: data.map(item => item.verificationStatus),
                        title: {
                            text: 'Verification Status'
                        }
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: 'Number of Organizations'
                        }
                    },
                    series: [{
                        name: 'Organizations',
                        data: data.map(item => item._count.verificationStatus)
                    }]
                });
            });

            // Fetch and render organization points over time chart
            $.get('/admin/organization-points-over-time', function(data) {
                Highcharts.chart('organization-points-over-time-chart', {
                    chart: {
                        type: 'line'
                    },
                    title: {
                        text: 'Total Points Accumulated by Organizations Over Time'
                    },
                    xAxis: {
                        categories: data.map(item => item.date),
                        title: {
                            text: 'Date'
                        }
                    },
                    yAxis: {
                        title: {
                            text: 'Total Points'
                        }
                    },
                    series: [{
                        name: 'Total Points',
                        data: data.map(item => item.totalPoints)
                    }]
                });
            });
       
            // Fetch and render donations over time chart
            $.get('/admin/donations-over-time', function(data) {
                Highcharts.chart('donations-over-time-chart', {
                    chart: {
                        type: 'area'
                    },
                    title: {
                        text: 'Donations Over Time'
                    },
                    xAxis: {
                        categories: data.map(item => item.date)
                    },
                    yAxis: {
                        title: {
                            text: 'Number of Donations'
                        }
                    },
                    series: [{
                        name: 'Donations',
                        data: data.map(item => item.count)
                    }]
                });
            });
            
            // Fetch and render donation status distribution chart
            $.get('/admin/donation-status-distribution', function(data) {
                    Highcharts.chart('donation-status-distribution-chart', {
                        chart: {
                            type: 'pie'
                        },
                        title: {
                            text: 'Donation Status Distribution'
                        },
                        series: [{
                            name: 'Donations',
                            colorByPoint: true,
                            data: data.map(item => {
                                return {
                                    name: item.status,
                                    y: item._count.status
                                };
                            })
                        }]
                    });
                });
            
            // Fetch and render average rating per organization or drop point
            $.get('/admin/average-rating-per-entity', function(data) { 
                if (Array.isArray(data) && data.length > 0) {
                    Highcharts.chart('average-rating-bubble-chart', {
                        chart: {
                            type: 'bubble',
                            plotBorderWidth: 1,
                            zoomType: 'xy'
                        },
                        title: {
                            text: 'Average Ratings and Feedback Volume'
                        },
                        xAxis: {
                            title: {
                                text: 'Average Rating'
                            },
                            labels: {
                                formatter: function() {
                                    return this.value.toFixed(2); // Format to two decimal points
                                }
                            }
                        },
                        yAxis: {
                            title: {
                                text: 'Feedback Count'
                            }
                        },
                        tooltip: {
                            pointFormat: '{point.name}: <b>{point.x} stars</b>, {point.y} feedbacks'
                        },
                        plotOptions: {
                            bubble: {
                                minSize: '10%',
                                maxSize: '120%',
                                dataLabels: {
                                    enabled: true,
                                    format: '{point.name}: {point.y}'
                                }
                            }
                        },
                        series: [{
                            data: data.map(item => ({
                                x: parseFloat(item.averageRating.toFixed(2)),
                                y: parseInt(item.count, 10),
                                name: item.name
                            })),
                            name: 'Organizations & Drop Points'
                        }]
                    });
                } else {
                    console.error('No data received for average ratings');
                }
            }).fail(function(jqXHR, textStatus, errorThrown) {
                console.error('Error fetching average ratings:', textStatus, errorThrown);
            });

            // Fetch and render histogram for distribution of ratings
            $.get('/admin/ratings-distribution', function(data) {
                // Map the data to the format expected by Highcharts
                const seriesData = data.map(item => item.count);

                Highcharts.chart('ratings-distribution-chart', {
                    chart: { type: 'column' },
                    title: { text: 'Distribution of Ratings' },
                    xAxis: {
                        categories: ['1', '2', '3', '4', '5'],
                        crosshair: true,
                        title: { text: 'Rating' }
                    },
                    yAxis: {
                        min: 0,
                        title: { text: 'Number of Ratings' },
                        stackLabels: {
                            enabled: true,
                            style: { fontWeight: 'bold', color: (Highcharts.defaultOptions.title.style && Highcharts.defaultOptions.title.style.color) || 'gray' }
                        }
                    },
                    series: [{
                        name: 'Ratings',
                        data: seriesData
                    }]
                });
            });

            // Fetch and render line chart for advertisement interactions over time
            $.get('/admin/ad-interactions-over-time', function(data) {
                Highcharts.chart('ad-interactions-line-chart', {
                    chart: {
                        type: 'line'
                    },
                    title: {
                        text: 'Advertisement Interactions Over Time'
                    },
                    xAxis: {
                        type: 'category',
                        categories: data.map(item => item.date),
                        title: {
                            text: 'Date'
                        }
                    },
                    yAxis: {
                        title: {
                            text: 'Number of Interactions'
                        }
                    },
                    series: [{
                        name: 'Interactions',
                        data: data.map(item => item.count)
                    }]
                });
            });

            // Fetch and render bar chart for points spent on advertisements by organization
            $.get('/admin/points-spent-on-ads', function(data) {
                Highcharts.chart('points-spent-bar-chart', {
                    chart: {
                        type: 'bar'
                    },
                    title: {
                        text: 'Points Spent on Advertisements by Organization'
                    },
                    xAxis: {
                        type: 'category',
                        categories: data.map(item => item.organization),
                        title: {
                            text: 'Organization'
                        }
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: 'Points Spent'
                        }
                    },
                    series: [{
                        name: 'Points Spent',
                        data: data.map(item => item.pointsSpent)
                    }]
                });
            });


        });

    </script>
        


</body>
</html>
