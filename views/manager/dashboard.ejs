<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Manager Dashboard</title>
  <!-- Link to Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
  <link href="https://fonts.googleapis.com/css?family=Roboto+Slab&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">

  <style>
  /* Base styles */
    body, html {
      margin: 0;
      padding: 0;
      font-family: 'Poppins', sans-serif;
      background-color: #f4f7fa;
    }

    /* Navbar Styles */
    .navbar .navbar-brand,
    .navbar .nav-link {
      color: #fff;
      font-family: 'Roboto Slab', serif,;
      font-weight: bold;
      font-size: 16px;
      margin-top: 15px;
    }

    .navbar {
      background-color: #219ebc;
      padding: 10px 0;
    }

    /* Jumbotron Styles */
    .jumbotron {
      background-color: #3498db;
      color: #fff;
      margin-bottom: 0;
    }

    /* Navigation Menu Styles */
    nav ul {
      list-style: none;
      text-align: center;
    }

    nav ul li {
      display: inline-block;
    }

    nav ul li a {
      display: block;
      padding: 15px;
      text-decoration: none;
      color: #aaa;
      font-weight: 800;
      text-transform: uppercase;
      margin: 0 10px;
      position: relative;
      transition: all .5s;
    }

    nav ul li a:hover {
      color: #555;
    }

    nav ul li a::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 2px;
      background-color: #8ecae6;
      transform: scaleX(0);
      transition: transform 0.5s;
    }

    nav ul li a:hover::after {
      transform: scaleX(1);
    }

    /* Logout Button Style */
    .btn-logout {
      background-color: #002244;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      transition: background-color 0.3s;
      margin-right: 20px;
      font-weight: bold;
      color: white;
      font-family: 'Roboto Slab', serif,;
    }

    .btn-logout:hover {
      background-color: #6082B6;
      color: #fff;
    }

    /* Container and Row Styles for Full Width on Small Screens */
    .container {
      padding: 20px;
      margin: 0 auto;
      max-width: 100%;
    }

    .row {
      margin: 0 -15px;
      display: flex;
      flex-wrap: wrap;
    }

    /* Card Styles */
    .card {
      background-color: #fff;
      border-radius: 12px;
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.05);
      margin: 15px;
      transition: all 0.3s ease-in-out;
    }

    .card:hover {
      transform: translateY(-5px);
    }

    .card-body {
      padding: 20px;
    }

    .card-title {
      text-align: center;
      font-size: 20px;
      margin-bottom: 15px;
      color: #333;
      font-weight: 600;
    }

    .card-text {
      text-align: center;
      font-size: 20px;
      color: #666;
    }

    /* Operating Hours Card Specific Styles */
    .operating-hours-card {
      background-color: #ffffff;
      border-left: 4px solid #ff6c6c;
    }

    /* Icons within card titles */
    .fas {
      margin-right: 10px;
    }

    /* Dashboard Container Styles */
    .dashboard-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 20px;
      padding: 20px;
    }

    .chart-card {
      padding: 20px;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      background: #fff;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
    }

    /* Column Layout for Cards */
    .col-md-4 {
      flex: 0 0 33.333%;
      max-width: 33.333%;
      padding: 15px;
      box-sizing: border-box;
    }

    /* Responsive Adjustments */
    @media (max-width: 991px) {
      .col-md-4 {
        flex: 0 0 50%;
        max-width: 50%;
      }
    }

    @media (max-width: 767px) {
      .col-md-4 {
        flex: 0 0 100%;
        max-width: 100%;
      }
      .dashboard-container {
        grid-template-columns: 1fr;
      }
    }

    /* Metric Card Hover Effects */
    .metric-card:hover {
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
      transform: translateY(-3px);
    }

    /* Chart Cards */
    .chart-card:hover {
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    /* Specific Chart Cards */
    #recent-feedback-container {
      grid-column: span 2;
    }

    /* Large Charts for Visibility */
    #donation-overview-chart,
    #recent-donations-chart,
    #donation-trends-chart,
    #feedback-summary-chart,
    #feedback-trends-chart,
    #user-engagement-chart,
    #organization-profiles-chart {
      grid-column: span 2;
    }

    /* Table Styles */
    .table {
      margin-top: 0;
      width: 100%;
      border-collapse: collapse;
    }

    .table th, .table td {
      border: 1px solid #dee2e6;
      padding: 8px;
      text-align: left;
    }

    .table thead th {
      border-bottom: 2px solid #dee2e6;
      background-color: #f8f9fa;
      color: #495057;
    }

    .table tbody tr:nth-child(odd) {
      background-color: #f2f2f2;
    }

    .table tbody tr:hover {
      background-color: #e9ecef;
    }

    /* Responsive Adjustments for Chart Cards */
    @media (max-width: 1200px) {
      .dashboard-container {
          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      }
    }

    @media (max-width: 768px) {
      .dashboard-container {
          grid-template-columns: 1fr;
      }

      .chart-card,
      .operating-hours-card,
      .metric-card {
          margin-bottom: 30px;
      }
    }

    /* Chart Card Hover Effects */
    .chart-card:hover {
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    /* Chart Cards on Small Screens */
    #recent-feedback-container,
    #donation-overview-chart,
    #recent-donations-chart,
    #donation-trends-chart,
    #feedback-summary-chart,
    #feedback-trends-chart,
    #user-engagement-chart,
    #organization-profiles-chart {
      grid-column: span 1;
    }

    /* Chart Card Hover Effects */
    .chart-card:hover {
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    /* Responsive Column Layout for Cards */
    @media (max-width: 991px) {
      .col-md-4 {
        flex: 0 0 50%;
        max-width: 50%;
      }
    }

    @media (max-width: 767px) {
      .col-md-4 {
        flex: 0 0 100%;
        max-width: 100%;
      }
    }

      
  </style>
</head>

<body>

  <!-- Navigation Bar -->
  <nav class="navbar navbar-expand-lg">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item active">
        <a class="nav-link" href="/manager/dashboard">Dashboard - <span class="badge badge-secondary">
            <%= dropPointName %>
          </span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/manager/manageDonation">Manage Donations</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/manager/managerAccount">Account</a>
      </li>
    </ul>
    <form class="form-inline my-2 my-lg-0" method="post" action="/manager/logout">
      <button class="btn btn-logout my-2 my-sm-0" type="submit">LOGOUT</button>
    </form>
  </nav>

  <div class="container">
    <div class="row">
      <!-- Operating Hours Card -->
      <div class="col-md-4">
        <div class="card operating-hours-card">
          <div class="card-body">
            <h5 class="card-title"><i class="fas fa-clock"></i> Operating Hours</h5>
            <p class="card-text"><i class="fas fa-sun"></i> Open: <%= openingTime %>
            </p>
            <p class="card-text"><i class="fas fa-moon"></i> Close: <%= closingTime %>
            </p>
          </div>
        </div>
      </div>

      <!-- Donation Reports Card -->
      <div class="col-md-4">
        <div class="card metric-card" id="donation-reports-card">
          <div class="card-body">
            <h5 class="card-title"><i class="fas fa-hand-holding-heart"></i> Total Donations</h5>
            <p class="card-text" id="total-donations">Loading...</p>
          </div>
        </div>
      </div>

      <!-- Performance Metrics Card -->
      <div class="col-md-4">
        <div class="card metric-card" id="performance-metrics-card">
          <div class="card-body">
            <h5 class="card-title"><i class="fas fa-star"></i> Average Feedback Score</h5>
            <p class="card-text" id="average-feedback-score">Loading...</p>
          </div>
        </div>
      </div>
    </div>

    <div class="dashboard-container">
      <div class="chart-card" id="donation-overview-chart"></div>
      <div class="chart-card" id="recent-feedback-container" style="grid-column: span 2;"></div>
      <div class="chart-card" id="recent-donations-chart"></div>
      <div class="chart-card" id="donation-trends-chart"></div>
      <div class="chart-card" id="feedback-summary-chart"></div>
      <div class="chart-card" id="feedback-trends-chart"></div>
      <div class="chart-card" id="user-engagement-chart"></div>
      <div class="chart-card" id="organization-profiles-chart"></div>
    </div>
  </div>

  <!-- Load Bootstrap JS (you can also include jQuery for additional functionality) -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

  <!-- Highcharts core library -->
  <script src="https://code.highcharts.com/highcharts.js"></script>

  <!-- Additional Highcharts modules -->
  <script src="https://code.highcharts.com/highcharts-more.js"></script>
  <script src="https://code.highcharts.com/modules/drilldown.js"></script>
  <script src="https://code.highcharts.com/modules/heatmap.js"></script>
  <script src="https://code.highcharts.com/modules/exporting.js"></script>
  <script src="https://code.highcharts.com/modules/export-data.js"></script>
  <script src="https://code.highcharts.com/modules/accessibility.js"></script>
  <script>
    // Fetch and render Donation Overview Chart with Drilldown
    fetch('/manager/donationOverviewData')
      .then(response => response.json())
      .then(data => {
        Highcharts.chart('donation-overview-chart', {
          chart: {
            type: 'pie'
          },
          title: {
            text: 'Donation Overview'
          },
          plotOptions: {
            pie: {
              allowPointSelect: true,
              cursor: 'pointer',
              dataLabels: {
                enabled: true,
                format: '<b>{point.name}</b>: {point.percentage:.1f} %'
              }
            }
          },
          series: [{
            name: 'Donations',
            colorByPoint: true,
            data: data.mainData
          }],
          drilldown: {
            series: data.drilldownData
          }
        });
      });

    // Fetch and render Recent Donations Chart
    fetch('/manager/recentDonationsData')
      .then(response => response.json())
      .then(data => {
        Highcharts.chart('recent-donations-chart', {
          chart: {
            type: 'column'
          },
          title: {
            text: 'Recent Donations'
          },
          xAxis: {
            categories: data.map(item => item.organizationName),
            crosshair: true
          },
          yAxis: {
            min: 0,
            title: {
              text: 'Total Quantity of Donations'
            }
          },
          tooltip: {
            headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
            pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
              '<td style="padding:0"><b>{point.y}</b></td></tr>' +
              '<tr><td style="padding:0">Date: </td><td style="padding:0"><b>{point.date}</b></td></tr>' +
              '<tr><td style="padding:0">Status: </td><td style="padding:0"><b>{point.status}</b></td></tr>',
            footerFormat: '</table>',
            shared: true,
            useHTML: true
          },
          plotOptions: {
            column: {
              pointPadding: 0.2,
              borderWidth: 0
            }
          },
          series: [{
            name: 'Quantity',
            data: data.map(item => {
              return {
                y: item.quantity,
                date: item.date,
                status: item.status
              };
            })
          }]
        });
      });

    // Fetch and render Donation Trends Chart
    fetch('/manager/donationTrendsData')
      .then(response => response.json())
      .then(data => {
        console.log("Data received:", data);
        Highcharts.chart('donation-trends-chart', {
          chart: {
            type: 'line'
          },
          title: {
            text: 'Donation Trends'
          },
          xAxis: {
            type: 'datetime',
            title: {
              text: 'Date'
            }
          },
          yAxis: {
            title: {
              text: 'Number of Donations'
            }
          },
          series: [{
            name: 'Donations',
            data: data
          }]
        });
      });

    // Fetch and render Recent Feedback
    fetch('/manager/recentFeedback')
      .then(response => response.json())
      .then(data => {
        const container = document.getElementById('recent-feedback-container');
        let html = '<h3>Recent Feedback</h3>';
        html += '<div class="table-responsive">'; // Wrap the table in a div with class 'table-responsive'
        html += '<table class="table">';
        html += '<thead><tr><th>Organization</th><th>Feedback</th><th>Rating</th><th>Date</th></tr></thead><tbody>';

        data.forEach(feedback => {
          html += `<tr>
                <td>${feedback.organization.organizationname}</td>
                <td>${feedback.content}</td>
                <td>${feedback.rating}</td>
                <td>${new Date(feedback.createdAt).toLocaleDateString()}</td>
               </tr>`;
        });

        html += '</tbody></table>';
        html += '</div>'; // Close the 'table-responsive' div
        container.innerHTML = html;
      })
      .catch(error => {
        console.error('Error fetching recent feedback:', error);
        // Handle error
      });

    // Fetch and render Feedback Summary Chart
    fetch('/manager/feedbackSummary')
      .then(response => response.json())
      .then(data => {
        Highcharts.chart('feedback-summary-chart', {
          chart: {
            type: 'pie'
          },
          title: {
            text: 'Feedback Summary'
          },
          series: [{
            name: 'Ratings',
            colorByPoint: true,
            data: data.map(item => {
              return {
                name: `Rating ${item.rating}`,
                y: item._count.rating
              };
            })
          }]
        });
      });

    // Fetch and render Feedback Trends Chart
    fetch('/manager/feedbackTrends')
      .then(response => response.json())
      .then(data => {
        Highcharts.chart('feedback-trends-chart', {
          chart: {
            type: 'line'
          },
          title: {
            text: 'Feedback Trends Over Time'
          },
          xAxis: {
            type: 'datetime',
            title: {
              text: 'Date'
            }
          },
          yAxis: {
            title: {
              text: 'Average Rating'
            }
          },
          series: [{
            name: 'Average Rating',
            data: data.map(item => {
              return {
                x: new Date(item.date).getTime(),
                y: item.averageRating
              };
            })
          }]
        });
      });

    // Fetch and update Donation Reports Card
    fetch('/manager/donationReportsData')
      .then(response => response.json())
      .then(data => {
        document.getElementById('total-donations').textContent = data.totalDonations || 'No data';
      })
      .catch(error => {
        console.error('Error fetching donation reports:', error);
        document.getElementById('total-donations').textContent = 'Error loading data';
      });

    // Fetch and update Performance Metrics Card
    fetch('/manager/performanceMetricsData')
      .then(response => response.json())
      .then(data => {
        document.getElementById('average-feedback-score').textContent = data.averageFeedbackScore.toFixed(2) || 'No data';
      })
      .catch(error => {
        console.error('Error fetching performance metrics:', error);
        document.getElementById('average-feedback-score').textContent = 'Error loading data';
      });

    // Fetch and render User Engagement Chart
    fetch('/manager/userEngagement')
      .then(response => response.json())
      .then(data => {
        // Donation Frequency Chart
        Highcharts.chart('user-engagement-chart', {
          chart: {
            type: 'column'
          },
          title: {
            text: 'User Engagement - Donation Frequency and Types'
          },
          xAxis: {
            categories: data.donationFrequency.map(item => item.organizationName),
            crosshair: true
          },
          yAxis: [{
            min: 0,
            title: {
              text: 'Number of Donations'
            }
          }, {
            title: {
              text: 'Donation Types'
            },
            opposite: true
          }],
          tooltip: {
            shared: true
          },
          series: [{
            name: 'Donations',
            data: data.donationFrequency.map(item => item._count.organizationId)
          }, {
            name: 'Donation Types',
            type: 'spline',
            yAxis: 1,
            data: data.donationTypes.map(item => item._count),
            tooltip: {
              valueSuffix: ' types'
            }
          }]
        });
      })
      .catch(error => {
        console.error('Error fetching user engagement data:', error);
      });


    // Fetch and render Organization Profiles Chart
    fetch('/manager/organizationProfiles')
      .then(response => response.json())
      .then(data => {
        Highcharts.chart('organization-profiles-chart', {
          chart: {
            type: 'bar'
          },
          title: {
            text: 'Organization Profiles - Donation Details'
          },
          xAxis: {
            categories: data.map(org => org.organizationname),
            title: {
              text: 'Organization Name'
            }
          },
          yAxis: {
            min: 0,
            title: {
              text: 'Total Points and Donations'
            }
          },
          series: [{
            name: 'Total Points',
            data: data.map(org => org.donations.reduce((sum, donation) => sum + donation.points, 0))
          }, {
            name: 'Total Donations',
            data: data.map(org => org.donations.length),
            tooltip: {
              valueSuffix: ' donations'
            }
          }]
        });
      })
      .catch(error => {
        console.error('Error fetching organization profiles data:', error);
      });




  </script>

</body>

</html>