<!DOCTYPE html>
<html>
<head>
  <title>Verify OTP</title>
  <!-- Link to Bootstrap CSS -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/boxicons/2.1.2/css/boxicons.min.css">
  <style>
    /* Import Google font - Poppins */
    @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap");

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: "Poppins", sans-serif;
    }
    body {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      background: #4682B4;
    }
    :where(.container, form, .input-field, header) {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }
    .container {
      background: #fff;
      padding: 30px 65px;
      border-radius: 12px;
      row-gap: 20px;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
    }
    .container header {
      height: 65px;
      width: 65px;
      background: #4070f4;
      color: #fff;
      font-size: 2.5rem;
      border-radius: 50%;
    }
    .container h4 {
      font-size: 1.25rem;
      color: #333;
      font-weight: 500;
    }
    form .input-field {
      flex-direction: row;
      column-gap: 10px;
    }
    .input-field input {
      height: 45px;
      width: 42px;
      border-radius: 6px;
      outline: none;
      font-size: 1.125rem;
      text-align: center;
      border: 1px solid #ddd;
    }
    .input-field input:focus {
      box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
    }
    .input-field input::-webkit-inner-spin-button,
    .input-field input::-webkit-outer-spin-button {
      display: none;
    }
    form button {
      margin-top: 25px;
      width: 100%;
      color: #fff;
      font-size: 1rem;
      border: none;
      padding: 9px 0;
      cursor: pointer;
      border-radius: 6px;
      pointer-events: none;
      background: #6e93f7;
      transition: all 0.2s ease;
    }
    form button.active {
      background: #4070f4;
      pointer-events: auto;
    }
    form button:hover {
      background: #1d8fe7;
    }
  </style>
</head>
<body>
  <!-- Add a Bootstrap container for better layout -->
  <div class="container">

    <header>
      <i class='bx bx-check-shield'></i>
  </header>
  
    <h4>Enter OTP Code</h4>
    <% if (typeof message !== 'undefined') { %>
        <p><%= message %></p>
    <% } %>
    <form action="/verify-otp" method="POST">
        <div class="input-field">
            <input type="text" maxlength="1" required>
            <input type="text" maxlength="1" required disabled>
            <input type="text" maxlength="1" required disabled>
            <input type="text" maxlength="1" required disabled>
            <input type="text" maxlength="1" required disabled>
            <input type="text" maxlength="1" required disabled>
        </div>
        <button type="submit" class="btn btn-primary">Verify OTP</button>
    </form>
</div>
  </div>

  <!-- Load Bootstrap JS (you can also include jQuery for additional functionality) -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  
  <script>
    const inputs = document.querySelectorAll("input"),
      button = document.querySelector("button");

    // iterate over all inputs
    inputs.forEach((input, index1) => {
      input.addEventListener("keyup", (e) => {
        const currentInput = input,
          nextInput = input.nextElementSibling,
          prevInput = input.previousElementSibling;

        // if the value has more than one character then clear it
        if (currentInput.value.length > 1) {
          currentInput.value = "";
          return;
        }
        // if the next input is disabled and the current value is not empty
        //  enable the next input and focus on it
        if (nextInput && nextInput.hasAttribute("disabled") && currentInput.value !== "") {
          nextInput.removeAttribute("disabled");
          nextInput.focus();
        }

        // if the backspace key is pressed
        if (e.key === "Backspace") {
          // iterate over all inputs again
          inputs.forEach((input, index2) => {
            if (index1 <= index2 && prevInput) {
              input.setAttribute("disabled", true);
              input.value = "";
              prevInput.focus();
            }
          });
        }

        //if the sixth input (which index number is 5) is not empty and has not disable attribute then
        //add active class if not then remove the active class.
        if (!inputs[5].disabled && inputs[5].value !== "") {
          button.classList.add("active");
          return;
        }
        button.classList.remove("active");
      });
    });

    //focus the first input which index is 0 on window load
    window.addEventListener("load", () => inputs[0].focus());
  </script>
</body>
</html>
